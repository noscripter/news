[
    
    {
        "id" : 309460,
        "title" : "昨天面试了个心机 boy",
        "url" : "http://www.v2ex.com/t/309460",
        "content" : "三线招 C++，偏重基础，大概能刷刷 leetcode 中简单题的程度就行了。\u000D\u000A笔试题也是我出的，大概也是这个风格。\u000D\u000A\u000D\u000A今天批卷，大概不到 30 分，应届生达到这个程度也就给面试机会了，但是对方有一年工作经验，然而有几个非常基础的题都不会，“ define 一年时间”，“ debug 和 release 区别”，感觉差点，本想算了。\u000D\u000A\u000D\u000A然后人事说对方无论如何想聊聊， [心机，不过是好的] 。\u000D\u000A\u000D\u000A那就聊聊吧，先看看简历，最开始列了学历，普本转 985 小硕毕业一年，然后就是一堆奖学金。之后是一个本地某公司的实习经历，之后就是项目经验，但是都没写具体的公司名。然后我随便提了一嘴，为啥只写实习经历，不写工作经历。他和我说，“我在这个 XX 公司实习的，然后工作了一年”。我以为他图省事写一起了。 [这段是最有心机的，事后我才发现，他故意在简历和语言上模糊，让我理解成他是在这个当地还比较有名 XX 公司工作了一年，实际是他只是在那实习之后没留下，去了某个不太有名的公司] 。\u000D\u000A\u000D\u000A然后我问了点技术问题，“检测内存泄漏”，“ C 语言调 C++库”，基本都答不上，我告诉他答案，然后立马就表示赞同，然后和我介绍他工作中遇到非常牵强算“类似”的问题，或者是直接转移话题“我之前工作遇到这类问题不多，我主要解决的是 XXX 问题”。 [也是心机，之前问题答好了，算好心机，之前问题答不好，说这些没意义] 。\u000D\u000A\u000D\u000A本来应该问问工作经验，但是之前他都说一堆了，而且这技术本身不合并，我就直接表明，你的基础不行，然后对方表示自己之前工作很忙，没时间做准备，之前工作领域和现在也有一定偏差，如果公司给他机会，他会在两个月之内让公司满意。 [也是好心机，技术不行就讲态度了] 。我就说了那样如果这次不成，欢迎你两个月之后再来面试。\u000D\u000A\u000D\u000A然后问了下大概薪资，我寻思如果对方就要个我们公司应届生的薪资 [我们公司工资水平比本地平均水平高] ，就不拍死了，让公司根据需求做决定，然后对方说了个我们这边两到三年工作经验的薪资，我就拍死不要了。\u000D\u000A\u000D\u000A我这几年面试了几十人，第一次遇见这么会玩的应聘者，说实话，我并不讨厌有心机的人，并且对方沟通水平和情商明显很高，和他面试 [聊天] 不会有尴尬的气氛，奈何他基础不行，所以他那些心机基本都没任何意义。他本身能从普本考到 985 ，肯定努力程度也是可以的，问题是之前工作内容大多是重复劳动，对个人提升没啥好处。\u000D\u000A\u000D\u000A做下总结：\u000D\u000A1,心机啊，面试技巧啊，这些都是锦上添花的东西，如果能力不够没任何实际意义。\u000D\u000A2,不要从事 [不能提高自己]  [又不给你时间自己提高] 的工作。",
        "content_rendered" : "\u003Cp\u003E三线招 C++，偏重基础，大概能刷刷 leetcode 中简单题的程度就行了。\u000A笔试题也是我出的，大概也是这个风格。\u003C/p\u003E\u000A\u003Cp\u003E今天批卷，大概不到 30 分，应届生达到这个程度也就给面试机会了，但是对方有一年工作经验，然而有几个非常基础的题都不会，“ define 一年时间”，“ debug 和 release 区别”，感觉差点，本想算了。\u003C/p\u003E\u000A\u003Cp\u003E然后人事说对方无论如何想聊聊， [心机，不过是好的] 。\u003C/p\u003E\u000A\u003Cp\u003E那就聊聊吧，先看看简历，最开始列了学历，普本转 985 小硕毕业一年，然后就是一堆奖学金。之后是一个本地某公司的实习经历，之后就是项目经验，但是都没写具体的公司名。然后我随便提了一嘴，为啥只写实习经历，不写工作经历。他和我说，“我在这个 XX 公司实习的，然后工作了一年”。我以为他图省事写一起了。 [这段是最有心机的，事后我才发现，他故意在简历和语言上模糊，让我理解成他是在这个当地还比较有名 XX 公司工作了一年，实际是他只是在那实习之后没留下，去了某个不太有名的公司] 。\u003C/p\u003E\u000A\u003Cp\u003E然后我问了点技术问题，“检测内存泄漏”，“ C 语言调 C++库”，基本都答不上，我告诉他答案，然后立马就表示赞同，然后和我介绍他工作中遇到非常牵强算“类似”的问题，或者是直接转移话题“我之前工作遇到这类问题不多，我主要解决的是 XXX 问题”。 [也是心机，之前问题答好了，算好心机，之前问题答不好，说这些没意义] 。\u003C/p\u003E\u000A\u003Cp\u003E本来应该问问工作经验，但是之前他都说一堆了，而且这技术本身不合并，我就直接表明，你的基础不行，然后对方表示自己之前工作很忙，没时间做准备，之前工作领域和现在也有一定偏差，如果公司给他机会，他会在两个月之内让公司满意。 [也是好心机，技术不行就讲态度了] 。我就说了那样如果这次不成，欢迎你两个月之后再来面试。\u003C/p\u003E\u000A\u003Cp\u003E然后问了下大概薪资，我寻思如果对方就要个我们公司应届生的薪资 [我们公司工资水平比本地平均水平高] ，就不拍死了，让公司根据需求做决定，然后对方说了个我们这边两到三年工作经验的薪资，我就拍死不要了。\u003C/p\u003E\u000A\u003Cp\u003E我这几年面试了几十人，第一次遇见这么会玩的应聘者，说实话，我并不讨厌有心机的人，并且对方沟通水平和情商明显很高，和他面试 [聊天] 不会有尴尬的气氛，奈何他基础不行，所以他那些心机基本都没任何意义。他本身能从普本考到 985 ，肯定努力程度也是可以的，问题是之前工作内容大多是重复劳动，对个人提升没啥好处。\u003C/p\u003E\u000A\u003Cp\u003E做下总结：\u000A1,心机啊，面试技巧啊，这些都是锦上添花的东西，如果能力不够没任何实际意义。\u000A2,不要从事 [不能提高自己]  [又不给你时间自己提高] 的工作。\u003C/p\u003E\u000A",
        "replies" : 123,
        "member" : {
            "id" : 173969,
            "username" : "coderluan",
            "tagline" : "www.coderluan.com ∑(っ °Д °\u003B)っ 程序员那些乱七八糟的事",
            "avatar_mini" : "//cdn.v2ex.co/avatar/3590/0a98/173969_mini.png?m=1463742212",
            "avatar_normal" : "//cdn.v2ex.co/avatar/3590/0a98/173969_normal.png?m=1463742212",
            "avatar_large" : "//cdn.v2ex.co/avatar/3590/0a98/173969_large.png?m=1463742212"
        },
        "node" : {
            "id" : 770,
            "name" : "career",
            "title" : "职场话题",
            "title_alternative" : "Career",
            "url" : "http://www.v2ex.com/go/career",
            "topics" : 1900,
            "avatar_mini" : "//cdn.v2ex.co/navatar/4ea0/6fbc/770_mini.png?m=1471551960",
            "avatar_normal" : "//cdn.v2ex.co/navatar/4ea0/6fbc/770_normal.png?m=1471551960",
            "avatar_large" : "//cdn.v2ex.co/navatar/4ea0/6fbc/770_large.png?m=1471551960"
        },
        "created" : 1475033031,
        "last_modified" : 1475033031,
        "last_touched" : 1475114227
    },
    
    {
        "id" : 309471,
        "title" : "真想砍死 UC 浏览器的产品经理！！",
        "url" : "http://www.v2ex.com/t/309471",
        "content" : "用了 css3 的 flex ，移动端 Safari （ iOS ）， chrome （ android ）完全没问题，也用了 autoprefix 添加浏览器前缀，结果上了 UC （ android ）一测，全跪。。。 QQ （ android ）浏览器还还好点，只是有点轻微错位。\u000D\u000A\u000D\u000A想着有问题就有问题吧，调试就行了，下了 UC 开发者版，结果安装完成提示 [初始化失败，请卸载后重新安装] 。。\u000D\u000A网上搜了下，似乎开发者版不能装在高版本的 android 上，我是 nexus5 android 6.0.1 。\u000D\u000A\u000D\u000AUC 对于开发人员真是毒瘤啊，你说你浏览器弄的这么屎我就不说了，你 tm 调试也弄的这么屎？？？\u000D\u000A真不知道 UC 的产品一天在干啥？净搞什么阅读、抽奖、视频这些 JB 玩意，浏览器最基础的渲染网页多少年了还是这个屎样。就不能跟 chrome 的行为保持一致吗？？\u000D\u000A\u000D\u000A我想我应该没有喷错人吧，我不相信 UC 的工程师们没这个技术。\u000D\u000A\u000D\u000A各位老司机如果有 UC 调试的好方法还请赐教，感谢了:)\u000D\u000A\u000D\u000A另：UC这个JB玩意强行劫持了我司移动端的APP下载链接，美其名曰为了“用户体验”，为你妈。",
        "content_rendered" : "\u003Cp\u003E用了 css3 的 flex ，移动端 Safari （ iOS ）， chrome （ android ）完全没问题，也用了 autoprefix 添加浏览器前缀，结果上了 UC （ android ）一测，全跪。。。 QQ （ android ）浏览器还还好点，只是有点轻微错位。\u003C/p\u003E\u000A\u003Cp\u003E想着有问题就有问题吧，调试就行了，下了 UC 开发者版，结果安装完成提示 [初始化失败，请卸载后重新安装] 。。\u000A网上搜了下，似乎开发者版不能装在高版本的 android 上，我是 nexus5 android 6.0.1 。\u003C/p\u003E\u000A\u003Cp\u003EUC 对于开发人员真是毒瘤啊，你说你浏览器弄的这么屎我就不说了，你 tm 调试也弄的这么屎？？？\u000A真不知道 UC 的产品一天在干啥？净搞什么阅读、抽奖、视频这些 JB 玩意，浏览器最基础的渲染网页多少年了还是这个屎样。就不能跟 chrome 的行为保持一致吗？？\u003C/p\u003E\u000A\u003Cp\u003E我想我应该没有喷错人吧，我不相信 UC 的工程师们没这个技术。\u003C/p\u003E\u000A\u003Cp\u003E各位老司机如果有 UC 调试的好方法还请赐教，感谢了:)\u003C/p\u003E\u000A\u003Cp\u003E另：UC这个JB玩意强行劫持了我司移动端的APP下载链接，美其名曰为了“用户体验”，为你妈。\u003C/p\u003E\u000A",
        "replies" : 75,
        "member" : {
            "id" : 93761,
            "username" : "droiz",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/gravatar/5f31d885f607ad743cd11a2a6dc88911?s=24&d=retro",
            "avatar_normal" : "//cdn.v2ex.co/gravatar/5f31d885f607ad743cd11a2a6dc88911?s=48&d=retro",
            "avatar_large" : "//cdn.v2ex.co/gravatar/5f31d885f607ad743cd11a2a6dc88911?s=73&d=retro"
        },
        "node" : {
            "id" : 422,
            "name" : "browsers",
            "title" : "浏览器",
            "title_alternative" : "Browsers",
            "url" : "http://www.v2ex.com/go/browsers",
            "topics" : 121,
            "avatar_mini" : "//cdn.v2ex.co/navatar/f854/54e8/422_mini.png?m=1436505273",
            "avatar_normal" : "//cdn.v2ex.co/navatar/f854/54e8/422_normal.png?m=1436505273",
            "avatar_large" : "//cdn.v2ex.co/navatar/f854/54e8/422_large.png?m=1436505273"
        },
        "created" : 1475034503,
        "last_modified" : 1475034605,
        "last_touched" : 1475102784
    },
    
    {
        "id" : 309560,
        "title" : "400% 的飞跃－ web 页面加载速度优化实战",
        "url" : "http://www.v2ex.com/t/309560",
        "content" : "### 前言\u000D\u000A一个网站的加载速度有多重要？ 反正我相信之前来[博主网站][1]的人至少有 50% 在加载完成前关闭了本站。 为啥捏？ 看图\u000D\u000A![]( http://ocwt4ikj4.bkt.clouddn.com/3085FDCF.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10)\u000D\u000A\u000D\u000A首页完整加载时间 8.18s ，看来能进来看博主网站的人都是真爱呀，哈哈。 正常来讲一个网页 4s 加载不完就会流失很大一部分用户，而博主的网站加载时间竟然达到了 8s 还是在电脑端，如果在移动端，加载时间会更久，体验会更差。 这样的话网站做得再难看批判者进不来不是白搭嘛，于是针对 web 页面加载速度的优化迫在眉睫。\u000D\u000A\u000D\u000A基于博主以前优化过其他网站，于是博主准备把这次的优化过程记录下来分享给大家借鉴。\u000D\u000A\u000D\u000A### 1. 页面分析\u000D\u000A先来看优化前的页面：\u000D\u000A![]( http://ocwt4ikj4.bkt.clouddn.com/3085FDCF.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10)\u000D\u000A\u000D\u000A加载时间 8.18s ，一共 33 个 请求，加载 1.38MB 。 可以看到对于网速较慢的浏览者光加载资源就需要 5s 以上，再加上 33 个请求切换开销，简直不能愉快的玩耍。 所以接下来的优化手段就要从加载流量和请求数量入手：\u000D\u000A\u000D\u000A### 2. 优化图片\u000D\u000A图片在网络流量中占有很大的比重，因此优化图片对于减少流量有着至关重要的作用。\u000D\u000A#### 合并小图片:\u000D\u000A很多页面有很多小图标，一个一个加载就相当于一个一个请求，将这些小图片合并成一个大图片，用 css 控制显示范围，这样就只需要一个请求即可加载完所有小图片，瞬间就会减少很多网络请求。\u000D\u000A#### 优化图片格式：\u000D\u000A很多图片没有经过优化直接上传到网页中会占用很多额外的流量，比如一张屏幕大小的截图，用截图工具直接截图后的大小大概有 1MB ，此时直接上传到网页中就直接占用了 1MB 流量，但其实我们完全可以只牺牲它 40% 的质量换取缩小 10 倍的大小，网上有很多转化 web 图片的网站，当然如果你有 photoshop 的话完全可以自己导出：\u000D\u000A\u000D\u000A将图片在 ps 中打开，然后点击菜单栏 “文件” 菜单，选择 “储存为 web 所用格式”，出现如下对话框：\u000D\u000A![]( http://ocwt4ikj4.bkt.clouddn.com/609E4373.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10)\u000D\u000A\u000D\u000A一般情况下 jpg 图片选择品质中即可， png 格式图片选择 png8 即可，但注意有透明背景的 png 图片要选择 png24 ，否则透明背景中会出现白边， gif 图片选择 gif64 无仿色即可。\u000D\u000A\u000D\u000A一般经过优化的图片大小至少会有 3 倍 之差，图片原大小越大优化的结果会越好。\u000D\u000A\u000D\u000A博主的网站最显眼的图片就是页眉上那个幽鬼的图片啦，所以就先拿它开刀，经过以上步骤优化：\u000D\u000A\u000D\u000A![]( http://ocwt4ikj4.bkt.clouddn.com/B2A958B4.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10)\u000D\u000A\u000D\u000A瞬间减小 4 倍，[实际效果][1]可以看看，代表着博主门面的图片经过优化后和优化前显示效果并没有明显区别，而文件大小却相差了 4 倍。\u000D\u000A\u000D\u000A### 3. 使用免费 cdn 加载第三方资源\u000D\u000A所有网站都会用到第三方资源，对于第三方资源，如果选择让自己的服务器提供，那么对于小型站点，本就不大的带宽相当一部分还要被公共资源占用，无形之中压缩了服务器带宽，如果把这部分资源让第三方 cdn 提供，那么对于网站加载速度会有不小的提升。\u000D\u000A\u000D\u000A博主选用的是 bootstrap 中文站提供的 [cdn 静态库][2]，博主看过不少国内 cdn 静态库，可以说 bootstrap 家的还是很良心的，更新及时，资源现在也很丰富，基本博主用的三方资源都能在上面找到，于是接下来就是搜索静态资源 ＋ 替换静态资源：\u000D\u000A\u000D\u000A```html\u000D\u000A\u003Cscript src\u003D\u0022/s/js/jquery.min.js\u0022\u003E\u003C/script\u003E\u000D\u000A改为\u000D\u000A\u003Cscript src\u003D\u0022//cdn.bootcss.com/jquery/3.1.1/jquery.min.js\u0022\u003E\u003C/script\u003E\u000D\u000A```\u000D\u000A这里不要写协议头，让网页自动判断使用 http 还是 https （ 关于 https 网站的部署可以看博主之前的文章： [给你的网站穿上外衣－ HTTPS 免费部署指南][3] ）\u000D\u000A\u000D\u000A### 4. 使用 cdn 储存静态资源\u000D\u000A一般网站 90% 的流量都用于静态资源的加载，除了用免费 cdn 加载第三方资源，还可以自己申请云空间储存自己的静态资源，进一步减小服务器的开销，让服务器只专注于提供数据或者网页渲染服务。 比如博主使用的是 X 牛 ，将自己的图片什么都存在 x 牛上，每个月都有免费流量，对于个人网站来说应该够用。\u000D\u000A\u000D\u000A### 5. 合并压缩 js css\u000D\u000A除去引用公共库，网页中还有许多自己写的 js 与 css ，如果我们直接把开发环境的文件拿来用无疑很浪费流量，因此在编写好网页测试完毕后，我们应该将 css 和 js 压缩合并成一个或者几个文件，这样既减少了请求次数又减少了流量消耗，一箭双雕。 当然还有 html 压缩，不过 ms 现阶段还有一些坑，就先不用了。 说到合并压缩，第一时间播追就想到了 webpack ，前端工程化神器，简单配置一下就可以完全搞定任务： \u000D\u000A\u000D\u000A博主网站自己的 js 工程文件放在 `/webroot/static/src/js/` 中，假如我们要将压缩合并后的文件放在 `/webroot/static/dist/js/` 中：\u000D\u000A\u000D\u000A在 `/webroot/` 下新建文件夹 `webpack`, 进入文件夹，新建文件 package.json:\u000D\u000A```json\u000D\u000A{\u000D\u000A  \u0022name\u0022: \u0022RaPo3\u0022,\u000D\u000A  \u0022version\u0022: \u00221.0.0\u0022,\u000D\u000A  \u0022description\u0022: \u0022\u0022,\u000D\u000A  \u0022main\u0022: \u0022index.js\u0022,\u000D\u000A  \u0022scripts\u0022: {\u000D\u000A    \u0022test\u0022: \u0022echo \u005C\u0022Error: no test specified\u005C\u0022 \u0026\u0026 exit 1\u0022\u000D\u000A  },\u000D\u000A  \u0022author\u0022: \u0022rapospectre\u0022,\u000D\u000A  \u0022license\u0022: \u0022ISC\u0022,\u000D\u000A  \u0022devDependencies\u0022: {\u000D\u000A    \u0022css\u002Dloader\u0022: \u0022^0.24.0\u0022,\u000D\u000A    \u0022style\u002Dloader\u0022: \u0022^0.13.1\u0022,\u000D\u000A    \u0022webpack\u0022: \u0022^1.13.2\u0022,\u000D\u000A    \u0022webpack\u002Ddev\u002Dserver\u0022: \u0022^1.15.1\u0022\u000D\u000A  }\u000D\u000A}\u000D\u000A\u000D\u000A```\u000D\u000A保存后执行：\u000D\u000A```json\u000D\u000Anpm install\u000D\u000A//或\u000D\u000Acnpm install\u000D\u000A//如果你有的话\u000D\u000A```\u000D\u000A然后新建 webpack 配置文件 webpack.config.js:\u000D\u000A```\u000D\u000Avar webpack \u003D require(\u0027webpack\u0027)\u003B\u000D\u000Amodule.exports \u003D {\u000D\u000A    entry: {\u000D\u000A        base: [\u0027../static/js/src/http.js\u0027, \u0027../static/js/stickUp.min.js\u0027, \u0027../static/js/src/base.js\u0027],\u000D\u000A        index: [\u0027../static/js/src/index.js\u0027],\u000D\u000A        detail: [\u0027../static/js/editormd.js\u0027, \u0027../static/js/src/article.js\u0027],\u000D\u000A        know: [\u0027../static/js/editormd.js\u0027, \u0027../static/js/src/know.js\u0027],\u000D\u000A        list: [\u0027../static/js/src/list.js\u0027]\u000D\u000A\u000D\u000A    },\u000D\u000A    output: {\u000D\u000A        path: \u0027../static/js/dist/\u0027,\u000D\u000A        filename: \u0027[name].js\u0027\u000D\u000A    },\u000D\u000A    plugins: [\u000D\u000A        new webpack.optimize.UglifyJsPlugin({\u000D\u000A            output: {\u000D\u000A                comments: false\u000D\u000A            },\u000D\u000A            compress: {\u000D\u000A                warnings: true\u000D\u000A            }\u000D\u000A        }),\u000D\u000A    ]\u000D\u000A}\u000D\u000A\u000D\u000A```\u000D\u000A这里要注意的是如果你的 js 文件间的引用是传统的 html 引入后引用那么在这里合并时记得把你被引用的方法\u005C对象等等设置为全局，比如 b.js 要引用 a.js 中的函数 c ，合并前要在 a.js 中加上（ 当然如果你一直用 es6/node 写 js 就不用看这里了 ）：\u000D\u000A```\u000D\u000Awindow.c \u003D c\u003B\u000D\u000A或\u000D\u000Athis.c \u003D c\u003B\u000D\u000A```\u000D\u000A\u000D\u000A不然 c 就会被当作局部函数封装起来。\u000D\u000A\u000D\u000A改完后运行 `webpack` 提示成功后看到 dist 目录里已经输出了合并压缩好的文件，之前 12kb 的文件经过压缩合并后只有 6kb 大小，然后我们将其替换到网页中即可。\u000D\u000A\u000D\u000A### 6. 代码优化\u000D\u000A页面代码的优化对于页面加载速度也有不小的影响，最广为人知的：\u000D\u000A\u000D\u000AHTML 头部的 JavaScript 和写在 HTML 标签中的 Style 会阻塞页面的渲染，因此 CSS 放在页面头部并使用 Link 方式引入， JavaScript 的引入放在页面尾\u000D\u000A\u000D\u000A其次还有：\u000D\u000A\u000D\u000A1. 按需加载，把统计、分享等 js 在页面 onload 后再进行加载，可以提高访问速度；\u000D\u000A2. 优化 cookie ，减少 cookie 体积；\u000D\u000A3. 避免 \u003Cimg\u003E 的 src 为空；\u000D\u000A4. 尽量避免设置图片大小，多次重设图片大小会引发图片的多次重绘，影响性能；\u000D\u000A5. 合理使用 display 属性：\u000D\u000A```json\u000D\u000Aa.display:inline 后不应该再使用 width 、 height 、 margin 、 padding 以及 float\u000D\u000Ab.display:inline\u002Dblock 后不应该再使用 float\u000D\u000Ac.display:block 后不应该再使用 vertical\u002Dalign\u000D\u000Ad.display:table\u002D*后不应该再使用 margin 或者 float\u000D\u000A```\u000D\u000A\u000D\u000A\u000D\u000A6. 不滥用 Float 和 web 字体；\u000D\u000A7. 尽量使用 CSS3 动画；\u000D\u000A8. 使用 ajax 异步加载部分请求；\u000D\u000A\u000D\u000A### 7. HTTP2 与 gzip\u000D\u000A\u000D\u000AHTTP2 是以 SPDY 为基础开发的。 SPDY 系列协议由谷歌开发，于 2009 年公开。它的设计目标就是降低 50% 的页面加载时间，所以 HTTP2 在很大程度也是为了优化页面加载时间，同时 HTTP2 支持多路复用，简单说就是所有的请求都通过一个 TCP 连接并发完成。 而 gzip 大家都不陌生，就是一种压缩网页的技术，当然压缩网页进行传输的代价就是给服务器增加一些压缩的负担，当然这种牺牲是值得的。\u000D\u000A\u000D\u000A如何开启 HTTP2 与 gzip ？ 博主的网站基于 nginx + uWSGI 进行服务，因此只要在 nginx 开启 HTTP2 与 gzip 就好：\u000D\u000A\u000D\u000A#### 开启 HTTP2\u000D\u000Anginx 1.9.5 之后才支持 HTTP2 ，而且需要配置编译参数，关于 nginx 开启 HTTP2 请直接移步博主之前的文章： [nginx 配置 http2][4]\u000D\u000A\u000D\u000A#### 开启 gzip\u000D\u000A直接打开 nginx 配置文件, 比如博主的在 `/etc/nginx/nginx.conf`， 然后加上：\u000D\u000A\u000D\u000A```json\u000D\u000Aserver{\u000D\u000A\u0009\u0009gzip  on\u003B\u000D\u000A        gzip_comp_level 6\u003B\u000D\u000A        gzip_proxied any\u003B\u000D\u000A        gzip_types text/plain text/css application/json application/javascript application/x\u002Djavascript text/xml application/xml application/xml+rss text/javascript application/x\u002Dfont\u002Dwoff\u003B\u000D\u000A\u0009\u0009}\u000D\u000A```\u000D\u000A\u000D\u000A然后重启 nginx 即可\u000D\u000A\u000D\u000A最后，让我们清除缓存，再次打开网站：\u000D\u000A![]( http://ocwt4ikj4.bkt.clouddn.com/218D5FF9.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10)\u000D\u000A\u000D\u000A总加载流量 527kb ，页面完成加载时间 1.84s ，对比之前加载时间 8.18s ， 1.38MB 流量，整体时间提升了 4 倍多！用手机端访问测试，简直快的飞起，不信你也来[访问][1]( 骗流量脸 )试试呀～\u000D\u000A\u000D\u000A最后，附上本文网站的源码以及目录结构，可以通过 commit 记录更加直观的看到优化的过程：\u000D\u000A\u000D\u000Ahttps://github.com/bluedazzle/django\u002Dvue.js\u002Dblog\u000D\u000A\u000D\u000A欢迎来颗 star 哈哈。\u000D\u000A\u000D\u000A[原文地址][5]: https://www.rapospectre.com/blog/web\u002Dpage\u002Dloading\u002Doptimize\u002Dguide\u000D\u000A\u000D\u000A作者：[rapospectre]( https://www.rapospectre.com)\u000D\u000A\u000D\u000A[1]: https://www.rapospectre.com\u000D\u000A[2]: https://www.bootcdn.cn/\u000D\u000A[3]: https://www.rapospectre.com/blog/https\u002Ddeploy\u002Dguide\u000D\u000A[4]: https://www.rapospectre.com/blog/https\u002Ddeploy\u002Dguide#h4\u002D3\u002Dhttp2\u000D\u000A[5]: https://www.rapospectre.com/blog/web\u002Dpage\u002Dloading\u002Doptimize\u002Dguide",
        "content_rendered" : "\u003Ch3\u003E前言\u003C/h3\u003E\u000A\u003Cp\u003E一个网站的加载速度有多重要？ 反正我相信之前来\u003Ca href\u003D\u0022https://www.rapospectre.com\u0022 rel\u003D\u0022nofollow\u0022\u003E博主网站\u003C/a\u003E的人至少有 50% 在加载完成前关闭了本站。 为啥捏？ 看图\u000A\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022http://ocwt4ikj4.bkt.clouddn.com/3085FDCF.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E首页完整加载时间 8.18s ，看来能进来看博主网站的人都是真爱呀，哈哈。 正常来讲一个网页 4s 加载不完就会流失很大一部分用户，而博主的网站加载时间竟然达到了 8s 还是在电脑端，如果在移动端，加载时间会更久，体验会更差。 这样的话网站做得再难看批判者进不来不是白搭嘛，于是针对 web 页面加载速度的优化迫在眉睫。\u003C/p\u003E\u000A\u003Cp\u003E基于博主以前优化过其他网站，于是博主准备把这次的优化过程记录下来分享给大家借鉴。\u003C/p\u003E\u000A\u003Ch3\u003E1. 页面分析\u003C/h3\u003E\u000A\u003Cp\u003E先来看优化前的页面：\u000A\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022http://ocwt4ikj4.bkt.clouddn.com/3085FDCF.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E加载时间 8.18s ，一共 33 个 请求，加载 1.38MB 。 可以看到对于网速较慢的浏览者光加载资源就需要 5s 以上，再加上 33 个请求切换开销，简直不能愉快的玩耍。 所以接下来的优化手段就要从加载流量和请求数量入手：\u003C/p\u003E\u000A\u003Ch3\u003E2. 优化图片\u003C/h3\u003E\u000A\u003Cp\u003E图片在网络流量中占有很大的比重，因此优化图片对于减少流量有着至关重要的作用。\u003C/p\u003E\u000A\u003Ch4\u003E合并小图片:\u003C/h4\u003E\u000A\u003Cp\u003E很多页面有很多小图标，一个一个加载就相当于一个一个请求，将这些小图片合并成一个大图片，用 css 控制显示范围，这样就只需要一个请求即可加载完所有小图片，瞬间就会减少很多网络请求。\u003C/p\u003E\u000A\u003Ch4\u003E优化图片格式：\u003C/h4\u003E\u000A\u003Cp\u003E很多图片没有经过优化直接上传到网页中会占用很多额外的流量，比如一张屏幕大小的截图，用截图工具直接截图后的大小大概有 1MB ，此时直接上传到网页中就直接占用了 1MB 流量，但其实我们完全可以只牺牲它 40% 的质量换取缩小 10 倍的大小，网上有很多转化 web 图片的网站，当然如果你有 photoshop 的话完全可以自己导出：\u003C/p\u003E\u000A\u003Cp\u003E将图片在 ps 中打开，然后点击菜单栏 “文件” 菜单，选择 “储存为 web 所用格式”，出现如下对话框：\u000A\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022http://ocwt4ikj4.bkt.clouddn.com/609E4373.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E一般情况下 jpg 图片选择品质中即可， png 格式图片选择 png8 即可，但注意有透明背景的 png 图片要选择 png24 ，否则透明背景中会出现白边， gif 图片选择 gif64 无仿色即可。\u003C/p\u003E\u000A\u003Cp\u003E一般经过优化的图片大小至少会有 3 倍 之差，图片原大小越大优化的结果会越好。\u003C/p\u003E\u000A\u003Cp\u003E博主的网站最显眼的图片就是页眉上那个幽鬼的图片啦，所以就先拿它开刀，经过以上步骤优化：\u003C/p\u003E\u000A\u003Cp\u003E\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022http://ocwt4ikj4.bkt.clouddn.com/B2A958B4.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E瞬间减小 4 倍，\u003Ca href\u003D\u0022https://www.rapospectre.com\u0022 rel\u003D\u0022nofollow\u0022\u003E实际效果\u003C/a\u003E可以看看，代表着博主门面的图片经过优化后和优化前显示效果并没有明显区别，而文件大小却相差了 4 倍。\u003C/p\u003E\u000A\u003Ch3\u003E3. 使用免费 cdn 加载第三方资源\u003C/h3\u003E\u000A\u003Cp\u003E所有网站都会用到第三方资源，对于第三方资源，如果选择让自己的服务器提供，那么对于小型站点，本就不大的带宽相当一部分还要被公共资源占用，无形之中压缩了服务器带宽，如果把这部分资源让第三方 cdn 提供，那么对于网站加载速度会有不小的提升。\u003C/p\u003E\u000A\u003Cp\u003E博主选用的是 bootstrap 中文站提供的 \u003Ca href\u003D\u0022https://www.bootcdn.cn/\u0022 rel\u003D\u0022nofollow\u0022\u003Ecdn 静态库\u003C/a\u003E，博主看过不少国内 cdn 静态库，可以说 bootstrap 家的还是很良心的，更新及时，资源现在也很丰富，基本博主用的三方资源都能在上面找到，于是接下来就是搜索静态资源 ＋ 替换静态资源：\u003C/p\u003E\u000A\u003Cpre\u003E\u003Ccode\u003E\u0026lt\u003Bscript src\u003D\u0022/s/js/jquery.min.js\u0022\u0026gt\u003B\u0026lt\u003B/script\u0026gt\u003B\u000A改为\u000A\u0026lt\u003Bscript src\u003D\u0022//cdn.bootcss.com/jquery/3.1.1/jquery.min.js\u0022\u0026gt\u003B\u0026lt\u003B/script\u0026gt\u003B\u000A\u003C/code\u003E\u003C/pre\u003E\u000A\u003Cp\u003E这里不要写协议头，让网页自动判断使用 http 还是 https （ 关于 https 网站的部署可以看博主之前的文章： \u003Ca href\u003D\u0022https://www.rapospectre.com/blog/https\u002Ddeploy\u002Dguide\u0022 rel\u003D\u0022nofollow\u0022\u003E给你的网站穿上外衣－ HTTPS 免费部署指南\u003C/a\u003E ）\u003C/p\u003E\u000A\u003Ch3\u003E4. 使用 cdn 储存静态资源\u003C/h3\u003E\u000A\u003Cp\u003E一般网站 90% 的流量都用于静态资源的加载，除了用免费 cdn 加载第三方资源，还可以自己申请云空间储存自己的静态资源，进一步减小服务器的开销，让服务器只专注于提供数据或者网页渲染服务。 比如博主使用的是 X 牛 ，将自己的图片什么都存在 x 牛上，每个月都有免费流量，对于个人网站来说应该够用。\u003C/p\u003E\u000A\u003Ch3\u003E5. 合并压缩 js css\u003C/h3\u003E\u000A\u003Cp\u003E除去引用公共库，网页中还有许多自己写的 js 与 css ，如果我们直接把开发环境的文件拿来用无疑很浪费流量，因此在编写好网页测试完毕后，我们应该将 css 和 js 压缩合并成一个或者几个文件，这样既减少了请求次数又减少了流量消耗，一箭双雕。 当然还有 html 压缩，不过 ms 现阶段还有一些坑，就先不用了。 说到合并压缩，第一时间播追就想到了 webpack ，前端工程化神器，简单配置一下就可以完全搞定任务：\u003C/p\u003E\u000A\u003Cp\u003E博主网站自己的 js 工程文件放在 \u003Ccode\u003E/webroot/static/src/js/\u003C/code\u003E 中，假如我们要将压缩合并后的文件放在 \u003Ccode\u003E/webroot/static/dist/js/\u003C/code\u003E 中：\u003C/p\u003E\u000A\u003Cp\u003E在 \u003Ccode\u003E/webroot/\u003C/code\u003E 下新建文件夹 \u003Ccode\u003Ewebpack\u003C/code\u003E, 进入文件夹，新建文件 package.json:\u003C/p\u003E\u000A\u003Cpre\u003E\u003Ccode\u003E{\u000A  \u0022name\u0022: \u0022RaPo3\u0022,\u000A  \u0022version\u0022: \u00221.0.0\u0022,\u000A  \u0022description\u0022: \u0022\u0022,\u000A  \u0022main\u0022: \u0022index.js\u0022,\u000A  \u0022scripts\u0022: {\u000A    \u0022test\u0022: \u0022echo \u005C\u0022Error: no test specified\u005C\u0022 \u0026amp\u003B\u0026amp\u003B exit 1\u0022\u000A  },\u000A  \u0022author\u0022: \u0022rapospectre\u0022,\u000A  \u0022license\u0022: \u0022ISC\u0022,\u000A  \u0022devDependencies\u0022: {\u000A    \u0022css\u002Dloader\u0022: \u0022^0.24.0\u0022,\u000A    \u0022style\u002Dloader\u0022: \u0022^0.13.1\u0022,\u000A    \u0022webpack\u0022: \u0022^1.13.2\u0022,\u000A    \u0022webpack\u002Ddev\u002Dserver\u0022: \u0022^1.15.1\u0022\u000A  }\u000A}\u000A\u000A\u003C/code\u003E\u003C/pre\u003E\u000A\u003Cp\u003E保存后执行：\u003C/p\u003E\u000A\u003Cpre\u003E\u003Ccode\u003Enpm install\u000A//或\u000Acnpm install\u000A//如果你有的话\u000A\u003C/code\u003E\u003C/pre\u003E\u000A\u003Cp\u003E然后新建 webpack 配置文件 webpack.config.js:\u003C/p\u003E\u000A\u003Cpre\u003E\u003Ccode\u003Evar webpack \u003D require(\u0027webpack\u0027)\u003B\u000Amodule.exports \u003D {\u000A    entry: {\u000A        base: [\u0027../static/js/src/http.js\u0027, \u0027../static/js/stickUp.min.js\u0027, \u0027../static/js/src/base.js\u0027],\u000A        index: [\u0027../static/js/src/index.js\u0027],\u000A        detail: [\u0027../static/js/editormd.js\u0027, \u0027../static/js/src/article.js\u0027],\u000A        know: [\u0027../static/js/editormd.js\u0027, \u0027../static/js/src/know.js\u0027],\u000A        list: [\u0027../static/js/src/list.js\u0027]\u000A\u000A    },\u000A    output: {\u000A        path: \u0027../static/js/dist/\u0027,\u000A        filename: \u0027[name].js\u0027\u000A    },\u000A    plugins: [\u000A        new webpack.optimize.UglifyJsPlugin({\u000A            output: {\u000A                comments: false\u000A            },\u000A            compress: {\u000A                warnings: true\u000A            }\u000A        }),\u000A    ]\u000A}\u000A\u000A\u003C/code\u003E\u003C/pre\u003E\u000A\u003Cp\u003E这里要注意的是如果你的 js 文件间的引用是传统的 html 引入后引用那么在这里合并时记得把你被引用的方法\u005C对象等等设置为全局，比如 b.js 要引用 a.js 中的函数 c ，合并前要在 a.js 中加上（ 当然如果你一直用 es6/node 写 js 就不用看这里了 ）：\u003C/p\u003E\u000A\u003Cpre\u003E\u003Ccode\u003Ewindow.c \u003D c\u003B\u000A或\u000Athis.c \u003D c\u003B\u000A\u003C/code\u003E\u003C/pre\u003E\u000A\u003Cp\u003E不然 c 就会被当作局部函数封装起来。\u003C/p\u003E\u000A\u003Cp\u003E改完后运行 \u003Ccode\u003Ewebpack\u003C/code\u003E 提示成功后看到 dist 目录里已经输出了合并压缩好的文件，之前 12kb 的文件经过压缩合并后只有 6kb 大小，然后我们将其替换到网页中即可。\u003C/p\u003E\u000A\u003Ch3\u003E6. 代码优化\u003C/h3\u003E\u000A\u003Cp\u003E页面代码的优化对于页面加载速度也有不小的影响，最广为人知的：\u003C/p\u003E\u000A\u003Cp\u003EHTML 头部的 JavaScript 和写在 HTML 标签中的 Style 会阻塞页面的渲染，因此 CSS 放在页面头部并使用 Link 方式引入， JavaScript 的引入放在页面尾\u003C/p\u003E\u000A\u003Cp\u003E其次还有：\u003C/p\u003E\u000A\u003Col\u003E\u000A\u003Cli\u003E按需加载，把统计、分享等 js 在页面 onload 后再进行加载，可以提高访问速度；\u003C/li\u003E\u000A\u003Cli\u003E优化 cookie ，减少 cookie 体积；\u003C/li\u003E\u000A\u003Cli\u003E避免 \u003Cimg\u003E 的 src 为空；\u003C/li\u003E\u000A\u003Cli\u003E尽量避免设置图片大小，多次重设图片大小会引发图片的多次重绘，影响性能；\u003C/li\u003E\u000A\u003Cli\u003E合理使用 display 属性：\u003C/li\u003E\u000A\u003C/ol\u003E\u000A\u003Cpre\u003E\u003Ccode\u003Ea.display:inline 后不应该再使用 width 、 height 、 margin 、 padding 以及 float\u000Ab.display:inline\u002Dblock 后不应该再使用 float\u000Ac.display:block 后不应该再使用 vertical\u002Dalign\u000Ad.display:table\u002D*后不应该再使用 margin 或者 float\u000A\u003C/code\u003E\u003C/pre\u003E\u000A\u003Col\u003E\u000A\u003Cli\u003E不滥用 Float 和 web 字体；\u003C/li\u003E\u000A\u003Cli\u003E尽量使用 CSS3 动画；\u003C/li\u003E\u000A\u003Cli\u003E使用 ajax 异步加载部分请求；\u003C/li\u003E\u000A\u003C/ol\u003E\u000A\u003Ch3\u003E7. HTTP2 与 gzip\u003C/h3\u003E\u000A\u003Cp\u003EHTTP2 是以 SPDY 为基础开发的。 SPDY 系列协议由谷歌开发，于 2009 年公开。它的设计目标就是降低 50% 的页面加载时间，所以 HTTP2 在很大程度也是为了优化页面加载时间，同时 HTTP2 支持多路复用，简单说就是所有的请求都通过一个 TCP 连接并发完成。 而 gzip 大家都不陌生，就是一种压缩网页的技术，当然压缩网页进行传输的代价就是给服务器增加一些压缩的负担，当然这种牺牲是值得的。\u003C/p\u003E\u000A\u003Cp\u003E如何开启 HTTP2 与 gzip ？ 博主的网站基于 nginx + uWSGI 进行服务，因此只要在 nginx 开启 HTTP2 与 gzip 就好：\u003C/p\u003E\u000A\u003Ch4\u003E开启 HTTP2\u003C/h4\u003E\u000A\u003Cp\u003Enginx 1.9.5 之后才支持 HTTP2 ，而且需要配置编译参数，关于 nginx 开启 HTTP2 请直接移步博主之前的文章： \u003Ca href\u003D\u0022https://www.rapospectre.com/blog/https\u002Ddeploy\u002Dguide#h4\u002D3\u002Dhttp2\u0022 rel\u003D\u0022nofollow\u0022\u003Enginx 配置 http2\u003C/a\u003E\u003C/p\u003E\u000A\u003Ch4\u003E开启 gzip\u003C/h4\u003E\u000A\u003Cp\u003E直接打开 nginx 配置文件, 比如博主的在 \u003Ccode\u003E/etc/nginx/nginx.conf\u003C/code\u003E， 然后加上：\u003C/p\u003E\u000A\u003Cpre\u003E\u003Ccode\u003Eserver{\u000A\u0009\u0009gzip  on\u003B\u000A        gzip_comp_level 6\u003B\u000A        gzip_proxied any\u003B\u000A        gzip_types text/plain text/css application/json application/javascript application/x\u002Djavascript text/xml application/xml application/xml+rss text/javascript application/x\u002Dfont\u002Dwoff\u003B\u000A\u0009\u0009}\u000A\u003C/code\u003E\u003C/pre\u003E\u000A\u003Cp\u003E然后重启 nginx 即可\u003C/p\u003E\u000A\u003Cp\u003E最后，让我们清除缓存，再次打开网站：\u000A\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022http://ocwt4ikj4.bkt.clouddn.com/218D5FF9.jpg?watermark/2/text/cmFwb3NwZWN0cmU\u003D/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg\u003D\u003D/dissolve/100/gravity/SouthEast/dx/10/dy/10\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E总加载流量 527kb ，页面完成加载时间 1.84s ，对比之前加载时间 8.18s ， 1.38MB 流量，整体时间提升了 4 倍多！用手机端访问测试，简直快的飞起，不信你也来\u003Ca href\u003D\u0022https://www.rapospectre.com\u0022 rel\u003D\u0022nofollow\u0022\u003E访问\u003C/a\u003E( 骗流量脸 )试试呀～\u003C/p\u003E\u000A\u003Cp\u003E最后，附上本文网站的源码以及目录结构，可以通过 commit 记录更加直观的看到优化的过程：\u003C/p\u003E\u000A\u003Cp\u003E\u003Ca href\u003D\u0022https://github.com/bluedazzle/django\u002Dvue.js\u002Dblog\u0022 rel\u003D\u0022nofollow\u0022\u003Ehttps://github.com/bluedazzle/django\u002Dvue.js\u002Dblog\u003C/a\u003E\u003C/p\u003E\u000A\u003Cp\u003E欢迎来颗 star 哈哈。\u003C/p\u003E\u000A\u003Cp\u003E\u003Ca href\u003D\u0022https://www.rapospectre.com/blog/web\u002Dpage\u002Dloading\u002Doptimize\u002Dguide\u0022 rel\u003D\u0022nofollow\u0022\u003E原文地址\u003C/a\u003E: \u003Ca href\u003D\u0022https://www.rapospectre.com/blog/web\u002Dpage\u002Dloading\u002Doptimize\u002Dguide\u0022 rel\u003D\u0022nofollow\u0022\u003Ehttps://www.rapospectre.com/blog/web\u002Dpage\u002Dloading\u002Doptimize\u002Dguide\u003C/a\u003E\u003C/p\u003E\u000A\u003Cp\u003E作者：\u003Ca href\u003D\u0022https://www.rapospectre.com\u0022 rel\u003D\u0022nofollow\u0022\u003Erapospectre\u003C/a\u003E\u003C/p\u003E\u000A",
        "replies" : 62,
        "member" : {
            "id" : 168210,
            "username" : "rapospectre",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/avatar/2623/dc64/168210_mini.png?m=1460619237",
            "avatar_normal" : "//cdn.v2ex.co/avatar/2623/dc64/168210_normal.png?m=1460619237",
            "avatar_large" : "//cdn.v2ex.co/avatar/2623/dc64/168210_large.png?m=1460619237"
        },
        "node" : {
            "id" : 300,
            "name" : "programmer",
            "title" : "程序员",
            "title_alternative" : "Programmer",
            "url" : "http://www.v2ex.com/go/programmer",
            "topics" : 13343,
            "avatar_mini" : "//cdn.v2ex.co/navatar/94f6/d7e0/300_mini.png?m=1475028013",
            "avatar_normal" : "//cdn.v2ex.co/navatar/94f6/d7e0/300_normal.png?m=1475028013",
            "avatar_large" : "//cdn.v2ex.co/navatar/94f6/d7e0/300_large.png?m=1475028013"
        },
        "created" : 1475051945,
        "last_modified" : 1475051945,
        "last_touched" : 1475092538
    },
    
    {
        "id" : 309558,
        "title" : "越来越觉得全尺寸键盘是个累赘了",
        "url" : "http://www.v2ex.com/t/309558",
        "content" : "以前只有一台电脑的时候觉得怎么样都好,现在手边再摆台笔记本,再加上键盘和鼠标的位置,桌子就显得很堵了.两个键盘并排摆下去几乎就没法下手了.而且很多键根本就用不上,比如数字键区.除了占地方一点用都没有.",
        "content_rendered" : "以前只有一台电脑的时候觉得怎么样都好,现在手边再摆台笔记本,再加上键盘和鼠标的位置,桌子就显得很堵了.两个键盘并排摆下去几乎就没法下手了.而且很多键根本就用不上,比如数字键区.除了占地方一点用都没有.",
        "replies" : 61,
        "member" : {
            "id" : 21980,
            "username" : "viator42",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/avatar/b02d/8e29/21980_mini.png?m=1471853202",
            "avatar_normal" : "//cdn.v2ex.co/avatar/b02d/8e29/21980_normal.png?m=1471853202",
            "avatar_large" : "//cdn.v2ex.co/avatar/b02d/8e29/21980_large.png?m=1471853202"
        },
        "node" : {
            "id" : 519,
            "name" : "ideas",
            "title" : "奇思妙想",
            "title_alternative" : "Ideas",
            "url" : "http://www.v2ex.com/go/ideas",
            "topics" : 1975,
            "avatar_mini" : "//cdn.v2ex.co/navatar/6353/8fe6/519_mini.png?m=1475028101",
            "avatar_normal" : "//cdn.v2ex.co/navatar/6353/8fe6/519_normal.png?m=1475028101",
            "avatar_large" : "//cdn.v2ex.co/navatar/6353/8fe6/519_large.png?m=1475028101"
        },
        "created" : 1475051687,
        "last_modified" : 1475051687,
        "last_touched" : 1475113873
    },
    
    {
        "id" : 309565,
        "title" : "谷歌发布神经机器翻译：翻译质量接近笔译人员",
        "url" : "http://www.v2ex.com/t/309565",
        "content" : "据外媒报道，谷歌于昨日发布了网页版和移动版的谷歌翻译。在汉译英的过程中，会采用全新的神经机器翻译，而这个 App 每天要进行一千八百万次这样的翻译。\u000D\u000A目前只支持汉译英,大家觉得准确度如何？",
        "content_rendered" : "据外媒报道，谷歌于昨日发布了网页版和移动版的谷歌翻译。在汉译英的过程中，会采用全新的神经机器翻译，而这个 App 每天要进行一千八百万次这样的翻译。\u000D\u003Cbr /\u003E目前只支持汉译英,大家觉得准确度如何？",
        "replies" : 52,
        "member" : {
            "id" : 45418,
            "username" : "letitbesqzr",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/avatar/ede3/df7d/45418_mini.png?m=1409314446",
            "avatar_normal" : "//cdn.v2ex.co/avatar/ede3/df7d/45418_normal.png?m=1409314446",
            "avatar_large" : "//cdn.v2ex.co/avatar/ede3/df7d/45418_large.png?m=1409314446"
        },
        "node" : {
            "id" : 65,
            "name" : "google",
            "title" : "Google",
            "title_alternative" : "Google",
            "url" : "http://www.v2ex.com/go/google",
            "topics" : 1507,
            "avatar_mini" : "//cdn.v2ex.co/navatar/fc49/0ca4/65_mini.png?m=1465196106",
            "avatar_normal" : "//cdn.v2ex.co/navatar/fc49/0ca4/65_normal.png?m=1465196106",
            "avatar_large" : "//cdn.v2ex.co/navatar/fc49/0ca4/65_large.png?m=1465196106"
        },
        "created" : 1475052568,
        "last_modified" : 1475112454,
        "last_touched" : 1475113731
    },
    
    {
        "id" : 309596,
        "title" : "小公司的官网怎么选择？",
        "url" : "http://www.v2ex.com/t/309596",
        "content" : "小公司的门户网站是大部分是自己写还是直接用其他现成的？\u000D\u000A\u000D\u000A主要就是发布产品， seo 招商用的。 \u000D\u000A\u000D\u000A有没有什么推荐的？",
        "content_rendered" : "\u003Cp\u003E小公司的门户网站是大部分是自己写还是直接用其他现成的？\u003C/p\u003E\u000A\u003Cp\u003E主要就是发布产品， seo 招商用的。\u003C/p\u003E\u000A\u003Cp\u003E有没有什么推荐的？\u003C/p\u003E\u000A",
        "replies" : 51,
        "member" : {
            "id" : 151519,
            "username" : "Artoria",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/avatar/b77a/179c/151519_mini.png?m=1450188211",
            "avatar_normal" : "//cdn.v2ex.co/avatar/b77a/179c/151519_normal.png?m=1450188211",
            "avatar_large" : "//cdn.v2ex.co/avatar/b77a/179c/151519_large.png?m=1450188211"
        },
        "node" : {
            "id" : 300,
            "name" : "programmer",
            "title" : "程序员",
            "title_alternative" : "Programmer",
            "url" : "http://www.v2ex.com/go/programmer",
            "topics" : 13343,
            "avatar_mini" : "//cdn.v2ex.co/navatar/94f6/d7e0/300_mini.png?m=1475028013",
            "avatar_normal" : "//cdn.v2ex.co/navatar/94f6/d7e0/300_normal.png?m=1475028013",
            "avatar_large" : "//cdn.v2ex.co/navatar/94f6/d7e0/300_large.png?m=1475028013"
        },
        "created" : 1475058632,
        "last_modified" : 1475058632,
        "last_touched" : 1475100025
    },
    
    {
        "id" : 309479,
        "title" : "Snipaste 1.8 带来了贴图缩略图，以及稳定性改进",
        "url" : "http://www.v2ex.com/t/309479",
        "content" : "先求一波关注: [微博]( https://weibo.com/snipaste) | [Twitter]( https://twitter.com/Snipaste)\u000D\u000A\u000D\u000A\u002D\u002D\u002D\u000D\u000A\u000D\u000A此次更新改进了很多影响稳定的问题，强烈建议更新，另带来了很多用户要求的 SETUNA 的缩略图功能：\u000D\u000A![]( https://i.v2ex.co/pVUyWRoR.gif)\u000D\u000A\u000D\u000A可以自定义缩略图大小：\u000D\u000A![]( https://i.v2ex.co/7NaHK5Y7.gif)\u000D\u000A\u000D\u000A动图也可以缩小！（图片略大）\u000D\u000A![]( https://i.v2ex.co/idW9uSyR.gif)\u000D\u000A\u000D\u000A特别感谢 [@amo109136891]( https://www.v2ex.com/member/amo109136891) 帮忙详细测试！他大概是现有用户中把贴图功能玩得最 6 的……\u000D\u000A\u000D\u000A还在用 1.6 及以前版本的同学是时候升级啦，现已可以在线自动更新。\u000D\u000A\u000D\u000A[下载页面戳这里]( https://zh.snipaste.com/download.html)\u000D\u000A\u000D\u000A此次更新日志：\u000D\u000A\u000D\u000A## v1.8\u000D\u000A\u000D\u000A### 新增\u000D\u000A\u000D\u000A* 贴图之缩略图模式（双击它）\u000D\u000A* (选项) 缩略图大小\u000D\u000A* \u0022恢复默认\u0022 按钮\u000D\u000A* 可以设置记号笔颜色的透明度了\u000D\u000A\u000D\u000A### 修复\u000D\u000A* 最大化窗口及全屏窗口的范围检测\u000D\u000A* 某些高分屏的窗口检测出错\u000D\u000A* 双屏（主屏在下，两个屏幕边缘没有对齐）的截屏问题\u000D\u000A* 标注形状的控制框被保存到了图像上\u000D\u000A* 当颜色为半透明时，矩形 /椭圆 /折线 /画笔 的绘制问题\u000D\u000A\u000D\u000A### 改进\u000D\u000A* 小的颜色按钮不再改变当前颜色的透明度",
        "content_rendered" : "\u003Cp\u003E先求一波关注: \u003Ca href\u003D\u0022https://weibo.com/snipaste\u0022 rel\u003D\u0022nofollow\u0022\u003E微博\u003C/a\u003E | \u003Ca href\u003D\u0022https://twitter.com/Snipaste\u0022 rel\u003D\u0022nofollow\u0022\u003ETwitter\u003C/a\u003E\u003C/p\u003E\u000A\u003Chr\u003E\u000A\u003Cp\u003E此次更新改进了很多影响稳定的问题，强烈建议更新，另带来了很多用户要求的 SETUNA 的缩略图功能：\u000A\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022https://i.v2ex.co/pVUyWRoR.gif\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E可以自定义缩略图大小：\u000A\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022https://i.v2ex.co/7NaHK5Y7.gif\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E动图也可以缩小！（图片略大）\u000A\u003Cimg alt\u003D\u0022\u0022 src\u003D\u0022https://i.v2ex.co/idW9uSyR.gif\u0022\u003E\u003C/p\u003E\u000A\u003Cp\u003E特别感谢 \u003Ca href\u003D\u0022https://www.v2ex.com/member/amo109136891\u0022 rel\u003D\u0022nofollow\u0022\u003E@amo109136891\u003C/a\u003E 帮忙详细测试！他大概是现有用户中把贴图功能玩得最 6 的……\u003C/p\u003E\u000A\u003Cp\u003E还在用 1.6 及以前版本的同学是时候升级啦，现已可以在线自动更新。\u003C/p\u003E\u000A\u003Cp\u003E\u003Ca href\u003D\u0022https://zh.snipaste.com/download.html\u0022 rel\u003D\u0022nofollow\u0022\u003E下载页面戳这里\u003C/a\u003E\u003C/p\u003E\u000A\u003Cp\u003E此次更新日志：\u003C/p\u003E\u000A\u003Ch2\u003Ev1.8\u003C/h2\u003E\u000A\u003Ch3\u003E新增\u003C/h3\u003E\u000A\u003Cul\u003E\u000A\u003Cli\u003E贴图之缩略图模式（双击它）\u003C/li\u003E\u000A\u003Cli\u003E(选项) 缩略图大小\u003C/li\u003E\u000A\u003Cli\u003E\u0022恢复默认\u0022 按钮\u003C/li\u003E\u000A\u003Cli\u003E可以设置记号笔颜色的透明度了\u003C/li\u003E\u000A\u003C/ul\u003E\u000A\u003Ch3\u003E修复\u003C/h3\u003E\u000A\u003Cul\u003E\u000A\u003Cli\u003E最大化窗口及全屏窗口的范围检测\u003C/li\u003E\u000A\u003Cli\u003E某些高分屏的窗口检测出错\u003C/li\u003E\u000A\u003Cli\u003E双屏（主屏在下，两个屏幕边缘没有对齐）的截屏问题\u003C/li\u003E\u000A\u003Cli\u003E标注形状的控制框被保存到了图像上\u003C/li\u003E\u000A\u003Cli\u003E当颜色为半透明时，矩形 /椭圆 /折线 /画笔 的绘制问题\u003C/li\u003E\u000A\u003C/ul\u003E\u000A\u003Ch3\u003E改进\u003C/h3\u003E\u000A\u003Cul\u003E\u000A\u003Cli\u003E小的颜色按钮不再改变当前颜色的透明度\u003C/li\u003E\u000A\u003C/ul\u003E\u000A",
        "replies" : 40,
        "member" : {
            "id" : 39798,
            "username" : "levie",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/avatar/3223/fed4/39798_mini.png?m=1379993366",
            "avatar_normal" : "//cdn.v2ex.co/avatar/3223/fed4/39798_normal.png?m=1379993366",
            "avatar_large" : "//cdn.v2ex.co/avatar/3223/fed4/39798_large.png?m=1379993366"
        },
        "node" : {
            "id" : 17,
            "name" : "create",
            "title" : "分享创造",
            "title_alternative" : "Create",
            "url" : "http://www.v2ex.com/go/create",
            "topics" : 6218,
            "avatar_mini" : "//cdn.v2ex.co/navatar/70ef/df2e/17_mini.png?m=1475028085",
            "avatar_normal" : "//cdn.v2ex.co/navatar/70ef/df2e/17_normal.png?m=1475028085",
            "avatar_large" : "//cdn.v2ex.co/navatar/70ef/df2e/17_large.png?m=1475028085"
        },
        "created" : 1475037002,
        "last_modified" : 1475037002,
        "last_touched" : 1475082355
    },
    
    {
        "id" : 309564,
        "title" : "Google Translate 中\u002D\u003E英升级成神经网络(NMT) 了，整段效果惊人地好啊。。",
        "url" : "http://www.v2ex.com/t/309564",
        "content" : "注意现在只上线了中文到英文的。。你们可以去试试。段落越长越书面效果约好。",
        "content_rendered" : "注意现在只上线了中文到英文的。。你们可以去试试。段落越长越书面效果约好。",
        "replies" : 38,
        "member" : {
            "id" : 362,
            "username" : "est",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/avatar/c3e8/78e2/362_mini.png?m=1383103622",
            "avatar_normal" : "//cdn.v2ex.co/avatar/c3e8/78e2/362_normal.png?m=1383103622",
            "avatar_large" : "//cdn.v2ex.co/avatar/c3e8/78e2/362_large.png?m=1383103622"
        },
        "node" : {
            "id" : 16,
            "name" : "share",
            "title" : "分享发现",
            "title_alternative" : "Share",
            "url" : "http://www.v2ex.com/go/share",
            "topics" : 20301,
            "avatar_mini" : "//cdn.v2ex.co/navatar/c74d/97b0/16_mini.png?m=1475028071",
            "avatar_normal" : "//cdn.v2ex.co/navatar/c74d/97b0/16_normal.png?m=1475028071",
            "avatar_large" : "//cdn.v2ex.co/navatar/c74d/97b0/16_large.png?m=1475028071"
        },
        "created" : 1475052512,
        "last_modified" : 1475052512,
        "last_touched" : 1475091541
    },
    
    {
        "id" : 309441,
        "title" : "搬瓦工最新优惠，，板瓦工个很会来事啊，，， 11 刀凤凰城节点的 vps 卖完了，，现在马上出 10.99 洛杉矶",
        "url" : "http://www.v2ex.com/t/309441",
        "content" : "之前搬瓦工出了 11 刀凤凰城的 vps ，，见之前的帖子 https://www.v2ex.com/t/307894\u000D\u000A\u000D\u000A刚想再卖一个，， 似乎刚卖光。。现在又推出  洛杉矶的，\u000D\u000A配置低多了， 128 内存， 3G 硬盘，当年这个配置好像是 5.99 年付的吧。 11.99 的凤凰城没货可惜了，也开始搞营销策略。\u000D\u000A\u000D\u000Ahttps://bwh1.net/aff.php?aff\u003D4477\u0026pid\u003D39\u000D\u000A\u000D\u000A此外 凤凰城 18.99 刀年付的还有货， 1G 内存， 2T 流量购买链接：\u000D\u000A\u000D\u000Ahttps://bwh1.net/aff.php?aff\u003D4477\u0026pid\u003D28",
        "content_rendered" : "\u003Cp\u003E之前搬瓦工出了 11 刀凤凰城的 vps ，，见之前的帖子 \u003Ca href\u003D\u0022https://www.v2ex.com/t/307894\u0022 rel\u003D\u0022nofollow\u0022\u003Ehttps://www.v2ex.com/t/307894\u003C/a\u003E\u003C/p\u003E\u000A\u003Cp\u003E刚想再卖一个，， 似乎刚卖光。。现在又推出  洛杉矶的，\u000A配置低多了， 128 内存， 3G 硬盘，当年这个配置好像是 5.99 年付的吧。 11.99 的凤凰城没货可惜了，也开始搞营销策略。\u003C/p\u003E\u000A\u003Cp\u003E\u003Ca href\u003D\u0022https://bwh1.net/aff.php?aff\u003D4477\u0026amp\u003Bpid\u003D39\u0022 rel\u003D\u0022nofollow\u0022\u003Ehttps://bwh1.net/aff.php?aff\u003D4477\u0026amp\u003Bpid\u003D39\u003C/a\u003E\u003C/p\u003E\u000A\u003Cp\u003E此外 凤凰城 18.99 刀年付的还有货， 1G 内存， 2T 流量购买链接：\u003C/p\u003E\u000A\u003Cp\u003E\u003Ca href\u003D\u0022https://bwh1.net/aff.php?aff\u003D4477\u0026amp\u003Bpid\u003D28\u0022 rel\u003D\u0022nofollow\u0022\u003Ehttps://bwh1.net/aff.php?aff\u003D4477\u0026amp\u003Bpid\u003D28\u003C/a\u003E\u003C/p\u003E\u000A",
        "replies" : 36,
        "member" : {
            "id" : 149594,
            "username" : "tadtung",
            "tagline" : "",
            "avatar_mini" : "//cdn.v2ex.co/avatar/8028/50df/149594_mini.png?m=1459157470",
            "avatar_normal" : "//cdn.v2ex.co/avatar/8028/50df/149594_normal.png?m=1459157470",
            "avatar_large" : "//cdn.v2ex.co/avatar/8028/50df/149594_large.png?m=1459157470"
        },
        "node" : {
            "id" : 747,
            "name" : "deals",
            "title" : "优惠信息",
            "title_alternative" : "Deals",
            "url" : "http://www.v2ex.com/go/deals",
            "topics" : 200,
            "avatar_mini" : "//cdn.v2ex.co/navatar/8d31/7bdc/747_mini.png?m=1385711265",
            "avatar_normal" : "//cdn.v2ex.co/navatar/8d31/7bdc/747_normal.png?m=1385711265",
            "avatar_large" : "//cdn.v2ex.co/navatar/8d31/7bdc/747_large.png?m=1385711265"
        },
        "created" : 1475028870,
        "last_modified" : 1475028929,
        "last_touched" : 1475081484
    }
    
]